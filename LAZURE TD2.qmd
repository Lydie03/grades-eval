---
title: "Lazure - graded lab2"
format: html
---

## Loading the dataset

```{r}
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
```
```{r}
data_set <- read.csv("grades (1).csv")
```

## Simple analysis

#2
The data set contains `length(data_set$grade)`grades. 

#3
```{r}
data_set %>% distinct(id) %>% count()
```

There are `data_set %>% distinct(id) %>% count()`students in the dataset. 

#4
```{r}
students <- data_set %>%
  distinct(id, .keep_all = TRUE) %>%  
  select(id = id, group = group)  

head(students)
```

#5
```{r}
ggplot(data = students, aes(x = group)) +
  geom_bar(fill = "skyblue", color = "black") +
  labs(title = "Number of Students per Group", x = "Group", y = "Number of Students") +
  theme_minimal()
```

#6

```{r}
post_apocalyptic_data <- data_set %>%
  filter(course == "Post-Apocalyptic History and Archaeology")

average_grades <- post_apocalyptic_data %>%
  group_by(group) %>%
  summarise(avg_grade = mean(grade, na.rm = TRUE))

ggplot(data = average_grades, aes(x = group, y = avg_grade)) +
  geom_col(fill = "skyblue", color = "black") +
  labs(title = "Average Grades in Post-Apocalyptic History and Archaeology by Group", x = "Group", y = "Average Grade") +
  theme_minimal()
```
#7

```{r}
average_grades <- post_apocalyptic_data %>%
  group_by(trimester) %>%
  summarise(avg_grade = mean(grade, na.rm = TRUE))

ggplot(data = average_grades, aes(x = as.factor(trimester), y = avg_grade, fill = as.factor(trimester))) +
  geom_bar(stat = "identity", position = "dodge", color = "black") +
  labs(title = "Average Grades in Post-Apocalyptic History and Archaeology by Trimester",
       x = "Trimester", y = "Average Grade") +
  theme_minimal()
```

## Attendance analysis

#8
```{r}
library(knitr)
grades_per_student <- data_set %>%
  distinct(id, .keep_all = TRUE) %>% 
  group_by(id) %>%
  summarise(
    min_grade = min(grade, na.rm = TRUE),
    max_bpm = max(grade, na.rm = TRUE),
    mean_bpm = mean(grade, na.rm = TRUE),
    median_bpm = median(grade, na.rm = TRUE),
    grades_count = n()
  )

grades_per_student

knitr::kable(grades_per_student, format = "markdown")
```

#9
```{r}
grades_per_student_SSWM <- data_set %>%
  filter(course=="Survival Skills and Wilderness Medicine") %>%
  group_by(id, group) %>%
  summarise(num_grades = n())

head(grades_per_student_SSWM)
```
#10
```{r}
same_num_grades_count <- grades_per_student_SSWM %>%
  group_by(num_grades) %>%
  summarise(num_students = n()) %>%
  filter(num_students > 1)  

ggplot(same_num_grades_count, aes(x = num_grades, y = num_students)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Number of Students with the Same Number of Grades",
       x = "Number of Grades",
       y = "Number of Students") +
  theme_minimal()

same_num_grades_count
```

#11

```{r}
ggplot(grades_per_student_SSWM, aes(x = group, y = num_grades, fill = group)) +
  geom_point() 
```
There does not seem to be a clear pattern between the two variables. 

## Grade analysis

#12
```{r}
average_grades <- data_set %>%
  filter(course=="Art and Expression in a Post-Apocalyptic World" | course=="Combat Tactics and Self-Defense") %>%
  group_by(id, group, course) %>%
  summarise(Average_Grade = mean(grade, na.rm = TRUE))

average_grades

pivoted_grades <- average_grades %>%
  pivot_wider(names_from = course, values_from = Average_Grade)
pivoted_grades

```

#13
```{r}
average_grades2 <- data_set %>%
  filter(course=="Renewable Energy and Sustainable Living" | course=="Radiation Ecology and Environmental Science") %>%
  group_by(id, group, course) %>%
  summarise(Average_Grade2 = mean(grade, na.rm = TRUE))

average_grades2

pivoted_grades2 <- average_grades2 %>%
  pivot_wider(names_from = course, values_from = Average_Grade2)
pivoted_grades2



ggplot(pivoted_grades2, aes(x = `Radiation Ecology and Environmental Science`, y = `Renewable Energy and Sustainable Living`)) +
  geom_point(size = 3, alpha=0.7) +
  labs(title = "Average Grades Comparison",
       x = "Radiation Ecology and Environmental Science",
       y = "Renewable Energy and Sustainable Living") +
  theme_minimal()
```
#14
```{r}
average_grades3 <- data_set %>%
  filter(course %in% c("Art and Expression in a Post-Apocalyptic World", "Survival Skills and Wilderness Medicine")) %>%
  group_by(id, group, course) %>%
  summarise(Average_Grade = mean(grade, na.rm = TRUE))

pivoted_grades3 <- average_grades3 %>%
  pivot_wider(names_from = course, values_from = Average_Grade)
pivoted_grades3

correlation_by_group <- pivoted_grades3 %>%
  select(`Art and Expression in a Post-Apocalyptic World`, `Survival Skills and Wilderness Medicine`, group) %>%
  group_by(group) %>%
  summary(cor(pivoted_grades3$`Art and Expression in a Post-Apocalyptic World`, pivoted_grades3$`Survival Skills and Wilderness Medicine`))

  correlation_by_group

```
#15

```{r}
library(dplyr)

# Filter the data for the specified courses
filtered_data <- data_set %>%
  filter(course %in% c("Art and Expression in a Post-Apocalyptic World", "Survival Skills and Wilderness Medicine"))

# Calculate the correlation per group
correlation_by_group <- pivoted_grades3 %>%
  select(`Art and Expression in a Post-Apocalyptic World`, `Survival Skills and Wilderness Medicine`, group) %>%
  group_by(group) %>%
  summary(cor(pivoted_grades3$`Art and Expression in a Post-Apocalyptic World`, pivoted_grades3$`Survival Skills and Wilderness Medicine`))

correlation_by_group <- pivoted_grades3 %>%
  group_by(group) %>%
  summarise(correlation = cor(`Art and Expression in a Post-Apocalyptic World`, `Survival Skills and Wilderness Medicine`, use = "pairwise.complete.obs"))

correlation_by_group <- pivoted_grades3 %>%
  group_by(group) %>%
  summarise(correlation = cor(`Art and Expression in a Post-Apocalyptic World`, `Survival Skills and Wilderness Medicine`, use = "pairwise.complete.obs"))

# Sort the groups by correlation in descending order
correlation_by_group <- correlation_by_group[order(-correlation_by_group$correlation), ]

# Get the first five groups
first_five_groups <- correlation_by_group$group[1:5]

# Display the first five groups and their correlations
print(correlation_by_group[1:5, ])

# Assuming 'pivoted_grades3' contains the pivoted data with average grades

# Calculate the correlation between the two courses for each group
correlation_by_group <- pivoted_grades3 %>%
  group_by(group) %>%
  summarise(correlation = cor(`Art and Expression in a Post-Apocalyptic World`, `Survival Skills and Wilderness Medicine`, use = "pairwise.complete.obs"))

# Sort the groups by correlation in descending order
correlation_by_group <- correlation_by_group[order(-abs(correlation_by_group$correlation)), ]

# Get the names of the top 5 correlated groups
top_correlated_groups <- correlation_by_group$group[1:5]

# Filter the data to include only the top 5 correlated groups
filtered_data <- pivoted_grades3 %>%
  filter(group %in% top_correlated_groups)

# Create the scatter plot with the filtered data
ggplot(filtered_data, aes(x = `Art and Expression in a Post-Apocalyptic World`, y = `Survival Skills and Wilderness Medicine`)) +
  geom_point(size = 3, alpha = 0.7) +
  labs(title = "Average Grades Comparison for Top Correlated Groups",
       x = "Art and Expression in a Post-Apocalyptic World",
       y = "Survival Skills and Wilderness Medicine") +
  theme_minimal()
```
#16
```{r}
# Assuming 'data_set' contains the original dataset with columns 'id', 'group', 'course', and 'grade'

# Calculate the average grade for each course for each student
average_grades <- data_set %>%
  group_by(id, group, course) %>%
  summarise(avg_grade = mean(grade, na.rm = TRUE))

# Calculate the average of the averages for each student
final_grades <- average_grades %>%
  group_by(id, group) %>%
  summarise(final_grade = mean(avg_grade))

# Sort the data frame in decreasing order of final grade
final_grades_sorted <- final_grades %>%
  arrange(desc(final_grade))

# Display the first five rows of the sorted data frame
head(final_grades_sorted, 5)
```
#17
```{r}
# Perform ANOVA to test for differences in final grades between groups
anova_result <- aov(final_grade ~ group, data = final_grades_sorted)
summary(anova_result)
```
#18

```{r}
trimester_averages <- final_grades_sorted %>%
  group_by(id, group) %>%
  summarise(trimester_avg = mean(final_grade))

# Check conditions for passing the year
pass_status <- trimester_averages %>%
  group_by(id) %>%
  summarise(pass = all(average_grades$Average_Grade >= 5) & all(trimester_avg >= 10))

# Merge pass status with final grades
final_data <- merge(final_grades_sorted, pass_status, by = "id")

# Display the final data frame with pass status
final_data
```
#19
```{r}
# Assuming 'final_data' contains the data frame with columns 'id', 'group', 'final_grade', and 'pass'

# Filter students who do not pass the year but have a final grade >= 10
not_pass_but_final_grade_gt_10 <- final_data %>%
  filter(!pass & final_grade >= 10)

# Count the number of students who meet this condition
num_students_not_pass_gt_10 <- nrow(not_pass_but_final_grade_gt_10)

# Display the number of students who do not pass but have a final grade >= 10
print(num_students_not_pass_gt_10)
```
```{r}
pass_rate_per_group <- final_data %>%
  group_by(group) %>%
  summarise(pass_rate = mean(pass) * 100)

# Create a bar plot to represent pass rates graphically
library(ggplot2)

ggplot(pass_rate_per_group, aes(x = group, y = pass_rate)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "Pass Rate per Group",
       x = "Group",
       y = "Pass Rate (%)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability
```

